Examples
========

Начальные условия
-----------------

  * модуль должен содержать следующие файлы из *lineyka*: *edit_db.py*, *lineyka_chat.py*, *run_chat.py*
  * в *python* должен быть установлен *PySide*
  * версия *python* - 2.7+
  * в сиситеме должен быть установлен *imagemagick*
  
Процесс
-------
  
  * Создание студии
      * создание экземпляра, инициализация
      * путь к директории
      * путь до convert
      * путь до tmp
      * привязка приложений к расширениям файлов
  * Артист
      * логин или регистрация
          * первая регистрация - рут
      * получение списка задач артиста
      * получение списка задач на проверку
  * Ассет
      * получение списка ассетов
      * список задач ассета
  * Задачи
      * open или look
      * получение списка версий активити задачи
      * open или look версии активити задачи
      * отправка на проверку (артистом)
      * приём задачи проверяющим
      
  * Чат
      * запуск
      
.. note::
  все методы как правило возвращают кортежи, первый элемент которых булевское значение, если оно *True* - то выполнение процедуры удалось, если *False* - то выполнение не удалось, и вторым элементом кортежа, в этом случае, будет сообщение о данной ошибке. Более подробно о каждой процедуре смотрите в описании методов классов.
      
Студия
~~~~~~

.. code-block:: python

  import edit_db as db
  
  studio = db.studio() # при создании экземпляра происходит инициализация студии - чтение настроек, заполнение поллей класса и экземпляра. 
                      # В домашней директории будет создана папка ".lineyka" с начальными настройками.
  
  # при первом создании экземпляра студии надо указывать директорию, где будет хранится метадата
  studio.set_studio(path_to_studio_folder)
  
  # так же надо указать путь до файла convert.exe, приложения *imagemagick* - для линукса это '/usr/bin/convert'
  path_to_convert_exe = '/usr/bin/convert' # или другой путь
  studio.set_convert_exe_path(path_to_convert_exe)
  
подробнее о :ref:`class-studio-page`
  
Отделы, Наборы задач, Проекты, Группы
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Все действия с этими объектами происходит в интерфейсе для менеджеров, поэтому тут не рассматривается.


Артист
~~~~~~

Авторизация
"""""""""""

.. code-block:: python

  artist = db.artist() # создание экземпляра
  
  artist.get_user() # инициализация текущего пользователя - заполнение полей экземпляра.
                    # если нет авторизованного пользователя, то artist.nikname останется False
                    # тогда надо будет выполнить авторизацию.
  
  artist.login_user(nik_name, password) # авторизация пользователя
  

Списки задач
""""""""""""

.. code-block:: python
  
  # получение списка задач назначенных на исполнение артисту (для данного проекта)
  task_list = artist.get_working_tasks(project, statuses=artist.working_statuses.append('checking'))[1] # project - это экземпляр класса project
  
  # получение списка задач назначенных на проверку артисту (для данного проекта)
  task_list = artist.get_reading_tasks(project, statuses='checking')[1] # project - это экземпляр класса project
  
.. note::

  *task_list* - это список экземпляров :ref:`class-task-page`
  
подробнее о :ref:`class-artist-page`


Ассет
~~~~~

.. code-block:: python

  # создание экземпляра
  asset = db.asset(project) # project - это экземпляр класса project

  # получение списка ассетов по типу
  assets_list = asset.get_list_by_type(asset_type = type)[1] # type - тип из studio.asset_types
  
  # получение списка ассетов группы
  assets_list = asset.get_list_by_group(group)[1] # group - это экземпляр класса group
  
.. note::

  *assets_list* - это список экземпляров :ref:`class-asset-page`
  
подробнее о :ref:`class-asset-page`

Задачи
~~~~~~

Создание экземпляра
"""""""""""""""""""

.. code-block:: python

  task = db.task(asset) # asset - это экземпляр класса asset
  
Открытие или просмотр файла задачи
""""""""""""""""""""""""""""""""""

.. rubric:: Отличие просмотра от открытия файла задачи:
  
* **Открытие** (*open*) - открываются рабочие файлы только тех задач, которые назначенны на авторизированного пользователя (из списка рабочих задач *артиста*) (см. `Списки задач`_ ). Статус открываемой задачи меняется на *work*, и если у данного пользователя есть какая-либо другая задача со статусом *work* - её статус меняется на *pause*

* **Просмотр** (*look*) - открываются файлы любых задач, не зависимо от пользователя. Статусы задач не меняются. Используется проверяющими или для получения чего либо из файла задачи.

.. note::

  В обеих случаях (открытие или просмотр) файл из активити задачи будет скопирован в *studio_tmp* директорию (определяется в *studio.set_tmp_dir()*) и открыт от туда, таким образом оригиналы версий рабочих файлов защищены от нежелательных правок.

