.. _source-page:

Task specification
==================

New Attributes
**************

source
------

.. note:: параметр (*json*) Список имён задач - исходников.

* Запись только в принимающей задаче.
* Подтягивать в сцену объекты в зависимости от типа ассета, задачи и активити.
    * Редактируемый словарь:
        { ``app_name`` :
            { ``this_task_type`` : { ``source_activity`` : тип подгружаемого объекта ( ``group`` или ``mesh`` или ещё что-то) } }
            --//--
        }
    * хранение *.json*
    * Иметь дефолт.
    * Редактор:
        * редактирование,
        * возможность отката до дефолта, 
        * возможность импорта из другого проекта.
            
description
-----------

.. note:: параметр (*text*) Описание задачи.

* Колонку в ``set_of_tasks``
* Поле ввода в панели создания единичной задачи.
* Редактор в *task_manager*

level
-----

.. note:: параметр (*text*) Пользовательский уровень задачи, с привязкой к ``planned_time`` и ``price``

* Выбор и назначение ``level`` в *task_manager*
    * максимальное отображение инфы о ``level`` в *gui*
    * при назначении так же заполняются ``planned_time`` и ``price``
    * при этом остаётся возможность изменения вручную этих параметров.
    
open_time
---------

.. note:: параметр (*timestamp*) Время открытия задачи.

* Не имеет значения записан или нет в БД.
* Заполняется при открытии задачи (взятии в работу)

time
----

.. note:: параметр (*json*) Словарь: ключи - ``nik_name``, значения - ссумарное время атриста по этой задаче.

* заполняется при выполнении ``commit`` (ссумирование к сущестующему значению)
* получается разница между ``open_time`` и временем выполнения ``commit``

full_time
---------

.. note:: параметр (*?*) Общее время затраченное на задачу всеми артистами, кто вёл работу над ней.

* заполняется при выполнении ``commit`` (ссумирование к сущестующему значению)
* получается разница между ``open_time`` и временем выполнения ``commit``

deadline
--------

.. note:: параметр (*timestamp*) дата окончания работ по задаче.

* расчитывается один раз при первом *open* на основе ``planned_time``. ``?``
* возможно делать перерасчёт по всем дедлайнам не выполненных задач, в случае перерасчёта общего дедлайна проекта. ``?``

New Methods
***********

.. py:function:: get_final_work_file_path()

  .. rubric:: Студийный работник:
  
  * загрузка *push + commit + pull* списков без учёта пользователя.
  * если последняя запись *commit* или *pull* - то берём по этой версии.
      * если файл этой версии не в *work* директории данного пользователя, то будет предложено сделать *push*.
  * если последняя запись *push*:
      * не *sketch*:
          * если *commit* версия этого push находится в *work* директории данного пользователя - то эта *commit* версия.
          * иначе - *push* версия.
      * *sketch*:
          * выбираем последний номер версии из *log.source*:
              * если данный файл есть в рабочей директории данного пользователя - то это он
              * если его нет - то предлагать сделать *pull*.
  * *return* - (*path*, номер версии)

  .. rubric:: Аутсорс:
  
  * загрузка списков *commit + pull* данного артиста.
  * путь по последней записи.
  * *return* - (*path*, номер версии)
  
.. py:function:: get_version_work_file_path()

  .. rubric:: Студийный работник:
  
  * загрузка списка *commit* версий без учёта пользователя.
  * путь по указанной версии.
  * *return* - (*path*, номер версии)
  
  .. rubric:: Аутсорс:
  
  * загрузка списка *commit + pull* версий данного пользователя.
  * путь по указанной версии.
  * *return* - (*path*, номер версии)

.. py:function:: get_final_push_file_path()

  .. rubric:: Студийный работник:
  
  * Загрузка *push* списка без учёта пользователя
  * По последнему *push*
  * *return*:
      * для sketch: ([список путей до каждого файла], номер версии)
      * для всех остальных: (*path*, номер версии)
  
  .. rubric:: Аутсорс:
  
  * игнор

.. py:function:: get_version_push_file_path()

  .. rubric:: Студийный работник:
  
  * Загрузка *push* списка без учёта пользователя
  * По указанной версии
  * *return*:
      * для sketch: ([список путей до каждого файла], номер версии)
      * для всех остальных: (*path*, номер версии)
  
  .. rubric:: Аутсорс:
  
  * игнор